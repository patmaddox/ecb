Version 1.61:
-------------

- New feature, ecb-select-edit-window-on-redraw.  Mostly used if you are running
  with ecb-redraw-layout-quickly and want to make sure you are always in the
  edit window. (Kevin)

- New feature, ecb-auto-activate.  If non-nil we can start the ECB after Emacs
  is started.  See `ecb-auto-activate' for more information.  (Kevin)

- New package, ecb-cycle.el.  Supports cycling through all known compilation
  buffers. (Kevin)
    + ecb-cycle-switch-to-compilation-buffer - switch to available compilation
      buffers.
    + ecb-cycle-through-compilation-buffers - cycle through all compilation
      buffers.
  
- Much better performance of the directory and file-browser in ECB, especially
  for directories with a lot of entries (means ~ >1000, dependend on your
  machine and the net-connection in case of network-drives). See also the new
  feature: ecb-cache-directory-contents. (Klaus)

- ecb-eshell now supports customization.  (Kevin)

- New feature: ecb-layout-always-operate-in-edit-window. Look at the
  documentation. (Kevin & Klaus)

- Fixed a bug in `ecb-toggle-ecb-windows'.  For starters we weren't setting
  `ecb-window-hidden' when we redraw the layout.  This means that the ecb
  windows could be hidden but never shown.
  Other things:
  + ecb-windows-hidden now has documentation
  + we display status messages when we hide windows. (Kevin)

- Fixed bug in `ecb-redraw-layout-quickly'.  If for come reason any of the ECB
  windows are not alive, we do not return with a hard error.  Instead, we use
  the scratch buffer.  (Kevin)

- New function ecb-toggle-enlarged-compilation-window allows users to expand and
  then contract the compilation window with a new key binding C-c . / (Kevin)

- new option ecb-add-path-for-not-matching-files. Look at the documentation
  (Klaus).

Version 1.60:
-------------

- ecb-highlight-token-header-after-jump is now a boolean; which face is used
  for highlighting is defined in ecb-token-header-face. (Klaus)

- New option 'ecb-post-process-semantic-tokenlist': Special postprocessing of
  the semantic tokenlist for certain major-modes. This is usefull for
  c++-mode. Now with the default value of this option all methods in a
  c++-implementation-file (no class/method-declaration but only method
  implementations) are grouped with respect to the class they belong. (Klaus)

- Now also with C++ Sources the method- and variable-protection is displayed
  correct in the ECB-method buffer (Klaus).

- Fixed a bug which prevented ECB using the root path "/" on unix-like systems
  as a source-path. (Klaus)

- If a file via the standard-mechanisms of Emacs (e.g. find-file) is openend,
  then the auto. window synch (see `ecb-window-sync') has worked only correct
  if the new file is located in any of the paths in `ecb-source-path'. Now ECB
  adds the path of the new file at least temporally via `ecb-add-source-path'
  to the list of paths in `ecb-source-path', so the window-synch works always
  correct. ECB asks the user if the new path should saved also for future
  sessions. (Klaus)

- Added ecb-redraw-layout-hooks so that code can be executed after we redraw the
  ecb layout.

- New hook ecb-current-buffer-sync-hook allows developers to add code to be
  evaluated after the ECB is synchronized with the current buffer.

- Now all faces used by ECB for highlighting and displaying it´s own stuff are
  customizable. See new group 'ecb-faces' (Klaus).

- ECB is now fully prepared for Emacs 21. The new feature
  `ecb-show-node-info-in-minibuffer' is implemented with the new 'help-echo
  property of Emacs 21, therefore the ugly `track-mouse' mechanism is not
  needed anymore with Emacs 21. (Klaus).

- The options `ecb-show-node-name-in-minibuffer',
  `ecb-show-complete-file-name-in-minibuffer' and
  `ecb-show-file-info-in-minibuffer' are gone and have been replaced by one
  single new option `ecb-show-node-info-in-minibuffer' where you can define
  separately for every tree-buffer when and which node info should be
  displayed in the minibuffer (Klaus).

- ecb-auto-expand-directory-tree now offers two options:
  - best: Expand always the best matching source-path for a file
  - first: Expand always the first matching source-path for a file (Klaus)

- Fixed a bug in auto. expanding directories if a source-path has an alias.
  (Klaus)

- If mouse is moved over an alias in the directories buffer then the real path
  is shown in the echo-area; see also 'ecb-show-node-info-in-minibuffer'
  (Klaus).

- If mouse is moved over an history-entry then the full path is shown in the
  echo-area so you can distinct better between two entries with the same name
  but with differnt pathes; see also 'ecb-show-node-info-in-minibuffer'
  (Klaus).

- New option for the history: ecb-kill-buffer-clears-history defines if
  `kill-buffer' should also remove the corresponding history entry. There are
  several options (Klaus).

Version 1.52:
-------------

- Added EIEIO requirement to ECB.

Version 1.51:
-------------

- Now the names of all ECB buffers begin with a SPC per default. (Klaus)

- ECB now can handle not only full but also partial buffer reparsing if done
  by semantic and other tools (e.g. JDE >= 2.2.9). The method buffer will
  always be uptodate if for a major-mode auto. reparsing after buffer changes
  is enabled (the auto. buffer reparsing itself is not an ECB feature but must
  be supplied by the major-mode, e.g. JDE). (Klaus)

- Incremental node-search in the ECB-buffers now uses the value of
  `case-fold-search'. (Klaus)

- Complete new customization of the ECB-keybindings. The option
  `ecb-prefix-key' has been removed. There is one new option `ecb-key-map'
  where you can customize all keysettings of ECB (including a common
  prefixkey). (Klaus)

- ecb-add-source-path and ecb-delete-source-path now ask if saving should be
  done for future sessions (Klaus).

- Added new navigator functionality. Makes it easy to go to the back and forward
  in navigated tokens and buffers. See ecb-nav-goto-next and 
  ecb-nav-goto-previous. (Jesper)

- Added an option to narrow the buffer to the token that is jumped to. See
  ecb-token-jump-narrow. (Jesper)

- Fixed a small bug that placed the window start at the beginning of the token
  instead of the beginning of the token line. (Jesper)

Version 1.50:
-------------

- Fixed a minor bug that occured when de-activating ECB under XEmacs. (Jesper)

- ecb-layout-window-sizes variable is now an association list, which makes it
  easier to add and remove layouts. (Jesper)

- Added a new layout (nr. 12). Thanks to Nick Cross
  <nick.cross@prismtechnologies.com> for this layout.

- Each source path can now have an alias that is displayed instead of the path
  name in the directories buffer. (Jesper)

- The history items can now use the buffer name instead of the file
  name. Customizable with ecb-history-item-name. (Jesper)

- When jumping to a token the window can be scrolled so that the token starts 
  at the top or center of the window. This behaviour is customizable with
  the variable ecb-scroll-window-after-jump. (Jesper)

- Fixed a bug when retrieving parent names for a token. (Jesper)

+ Now the option 'ecb-prefix-key' is customizable so you can define another
  prefix if there are conflicts with other minor-modes or packages (Klaus).

Version 1.41:
-------------

- Fixed bug when clicking on token in the methods buffer in XEmacs.

Version 1.40:
-------------

- Tree-incremental-search in the ecb-windows now ignores all non interesting
  stuff:
  + any leading spaces
  + expand/collapse-buttons: [+] resp. [-]
  + protection-signs (+, -, #) in the method-window if uml-notation is used
  + variables types or returntypes in front of variable- or method-names.
  + const specifier for variables
  This makes incremental-searching in a tree-buffer much faster and easier.
  (Klaus)

- ECB now uses Semantic DB to find parents of types. (Jesper)

- Long source paths in the directories buffer are now truncated at the
  beginning. Customizable with variable ecb-truncate-long-names. (Jesper)

- Tokens can now be sorted by access. (Jesper)

- Added a function to semantic-clean-token-hooks that just updates the token
  changed instead of re-building the entire token tree. (Jesper)

- Implemented a token tree cache that stores recently opened buffers' token
  trees. This makes the buffer switching much faster and also saves expanded
  nodes and window positions. The cache is unlimited at the moment. (Jesper)

- Added a speedbar-like layout nr. 11. This is very useful (like also layout
  nr. 10) either for users with small screens or users which normally do not
  need/want the ECB-windows but sometimes browsing/selecting
  methods/variables. (Klaus)

- Better extraction of tokens from current buffer. ECB now displays any token
  type in any order. (Jesper)

- ECB now uses Semantic to display tokens in the methods buffer. (Jesper)

- Much saver ecb-redraw-layout: Now the layout can be restored ALWAYS
  regardless what messy thing has been done before. (Klaus)

- New advice for 'other-window-for-scrolling', so all scroll-functions for the
  "other" window can also scroll the first edit-window if point stays in the
  second one. (Klaus)

- ecb-toggle-ecb-windows now preserves the split, the split-amount, the buffer
  contents, the window starts and current point. (Klaus)

- Some important changes in the ECB-layout concerning displaying compilation-
  and temp-buffers. (Klaus):

  + 'ecb-select-compile-window' has been gone.
  
  + 'ecb-use-dedicated-windows' is not longer a user-customizable option but
    it is always set to t, because this is essential for correct working of
    the ecb-layout engine!

  + 'ecb-compile-window-temporally-enlarge' is now a boolean option.  

  + Now ECB does all necessary that your edit-window of ECB seems to be a
    normal Emacs frame, especially concerning displaying temp-buffers (like
    help- and completion-buffers) and compilation-buffers.
    
  + The variables 'compilation-window-height' and 'temp-buffer-shrink-to-fit'
    (XEmacs) and 'temp-buffer-resize-mode' (GNU Emacs) are now fully supported
    by ECB if no durable compilation-window is shown.

- New function to toggle visibility of the ECB windows. Now it´s possible to
  hide all ECB windows without deactivating ECB (see 'ecb-toggle-ecb-windows')
  (Klaus).

- ECB is now a global minor mode with it´s own menu "ECB" and it´s own keymap
  with prefix "C-c .". New function to (de)activate/toggle ECB with
  'ecb-minor-mode'. (Klaus)

- Fixed a bug in highlighting current token in the method-buffer when
  font-lock-mode is nil for the source-buffer. (Klaus)

- New option for highlighting the method-header in the edit-window after
  clicking onto the method in the method-window (like Speedbar does). (Klaus)

- Function for automatically submitting a problem report to the ECB mailing
  list: ecb-submit-problem-report. (Klaus)

- Now not only for method-highlighting an idle delay can be set but also for
  synchronizing the ECB windows with current edit window (see option
  ecb-window-sync and ecb-window-sync-delay; default is 0.25 sec delay)
  (Klaus).

- Smarter highlighting of current method (Klaus).

- All tree-buffers now have as default-directory the current selected
  directory in the directory buffer. So you can also open files with find-file
  etc. from within the tree-buffers. (Klaus).

Version 1.32:
-------------

- Nil parent bug fixed. (Jesper)

- New advices for find-file and switch-to-buffer (Klaus).

- Now possible to set an idle delay before the current method is highlighted;
  useful for slow machines but prevents also "jumping backward/forward" during
  scrolling within java-classes if point goes out of method-definition into
  class-definition. Default is an idle time of 0.25 seconds. (Klaus).

Version 1.31:
-------------

- Parents (extends and implements) of the classes in the current buffer is now
  shown in the methods buffer. (Jesper). Possibility to define a regexp which
  parents should not be shown. (Klaus).

- Now displaying the complete node name in minibuffer with the track-mouse
  mechanism works also with mouse-avoidance-mode on; the mouse-avoidance will
  be deactivated as long ECB is activated and the node-name display-mechanism
  is on. This refers only to GNU Emacs! (Klaus)

- Fixed a bug in 'ecb-current-buffer-sync' and 'ecb-redraw-layout' (Klaus)

- Fixed a bug in loading semantic 1.3.3 or semantic 1.4 (Klaus)

Version 1.30:
-------------

- If not all ECB-tree-windows of current layout are visible at redraw-time
  ('ecb-redraw-layout') then the redraw synchronizes the contents of the
  tree-windows with the source displayed in current edit-window (Klaus).

- Added a section "Tips and Tricks" to the ECB online-help. (Klaus)

- Added a new layout Nr. 10 for very small screen resolutions where all
  squarecentimeters are needed for the editing itself. This layout only
  displays a method-window and a edit-window. (Klaus).

- The messages displayed after moving the mouse over a node in a tree-buffer
  do not longer wasting the log, means they will not be logged (Klaus).

- ECB now also works with semantic >= 1.4 (Klaus).

- Now the ecb-compile-window-height is also preserved after displaying
  temp-buffers (e.g. help-buffers after C-h f) - if you want this. See the
  documentation of the option 'ecb-compile-window-temporally-enlarge'. (Klaus)

- Added menu items for modification of the source paths in the directories
  buffer. (Jesper)

- Added buttons to directories buffer. (Jesper)

- Mouse over files, methods etc. now work even if follow-mouse isn't
  activated (Jesper). ECB adds a more intelligent mouse tracking mechanism, so
  not only the mouse-over-node stuff of ECB works now very well and savely but
  also follow-mouse itself works better and saver as without activated ECB.
  (Klaus)

- Popup menus now work in XEmacs. (Jesper)

- You can now specify paths with env-vars like $HOME in the option
  `ecb-source-path'. (Klaus)

- The user must now confirm if he tries to delete the ECB frame. If he wants
  to proceed then ECB will be first deactivated before deleting the frame.
  This works for all ways to delete a frame (shortcut, window-manager-button,
  ...). (Klaus)

- ECB now optionally create its own frame when activated. See the new option
  'ecb-new-ecb-frame'. (Klaus)

- Intelligent recentering of tree-buffers now completely implemented without
  the function 'recenter'. This means no flickering and flashing the whole
  frame anymore after each 'recenter'. Now the ECB display is stable like a
  rock :-) (Klaus)

- Mouse over directories now shows directory path. (Jesper)

- Methods and variables with point are now highlighted. (Jesper)

- ECB windows are now updated when saving new files and deleting files. (Jesper)

- incremental-search in every tree-buffer for easier and faster selecting
  nodes with the keyboard (see new option `ecb-tree-incremental-search' and
  new function 'tree-buffer-incremental-node-search') for more details.
  (Klaus)

- ecb-redraw-layout now restores both edit window buffers and the edit window
  start. (Jesper)

- Spelling corrections. Thanks to Colin Marquardt
  <colin.marquardt@usa.alcatel.com> for spotting them.

- Mode line prefixes can now be set individually for each ECB-buffer. There is
  a default-prefix for each buffer but the user can also define a custom
  prefix or no prefix at all. (Jesper/Klaus)

- Fixed small bug in directory tree that caused directories to be sorted by
  extension. (Jesper)

Version 1.20 (2001-04-28):
--------------------------

- Now the ECB-buffers are intelligent in displaying nodes (Klaus):
  + Expandable nodes: (e.g. a directory with it´s subdirectories). An
    ECB-tree-window now tries always to make visisble as much as possible of
    the subnodes of a node if a node is expanded (e.g. by clicking onto it´s
    expand-symbol).
  + Other nodes: A ECB-tree-window is always best filled, means no empty lines
    if there are enough lines to fill the whole window.

- The source file is only parsed if the ECB methods window is visible
  (Jesper).

- The methods buffer now show fields of EIEIO classes. Only works with
  semantic 1.4. Thanks to Eric M. Ludlam <eric@siege-engine.com> for
  this patch.

- Now all adviced functions behave only special in the ECB-frame. In each other
  frame they behave exactly like the not adviced functions. (Klaus)

- Fix "invalid method-buffer"-bug (Klaus, with a lot of help by Eric Ludlam
  and David Ponce).

- Source files can now be sorted by name, extension or not sorted at all
  (Jesper).

- Now you can precisely define by an exclude and include regexp which files
  should be displayed by ECB. (Jesper).

- Jumping to a method/variable from the ECB-method buffer now sets the mark so
  the user can easily jump back (see `ecb-method-jump-sets-mark'). (Klaus)

- Now you can define a primary and a secondary mouse-button for ECB. See the
  new variable `ecb-primary-secondary-mouse-buttons'.
  Note: The name of the option 'ecb-left-mouse-jump-destination' has been
  changed to `ecb-primary-mouse-jump-destination'!

- Now ECB is really ediff-friendly: During ediff is active the advices of ECB
  are temporally deactivated! (Klaus)

- Now all tree-buffers (ECB-buffers) are read-only (Klaus)!

- Better implementation of advising the functions. Now all adviceable
  functions are completely independent from each other (Klaus)!

- Mon Apr 2 21:20:34 2001 (burton@relativity.yi.org): merge my modeline
  additions... this removes the redundant modeline info and shows important
  information.

- Added new option `ecb-advice-window-functions'. Enabling the intelligent
  window functions via customize. No hook hacking necessary anymore!
  Now the intelligent window functions are implemented by advicing (klaus).

- Better online help display (Klaus).

- Added new option 'ecb-primary-mouse-jump-destination' (thanks to David Hay
  for suggestion <David.Hay@requisite.com>.

- Adviced 'other-window' acts now exactly like the original but always related
  to 'ecb-other-window-jump-behavior' (klaus)!

- Fixed bug with 'ecb-compile-window-height'. Now ECB has always the correct
  compile-window height after compilation-output (compile, grep etc.)

- New option 'ecb-compile-window-temporally-enlarge'. Allowing
  Emacs-compilation to enlarge the ECB-compile-window temporally.

Version 1.10 (2001-03-25):
--------------------------

- Automatic expansion of the directory tree.

- Method parsing is now recursive, so that for example inner classes
  in Java are shown in the methods buffer.

- Variables are now shown in the methods buffer.

- Selected files and directories now use the secondary-selection
  face. Thanks to Kevin A. Burton <burton@relativity.yi.org> for this
  patch.

- Fixed some issues with XEmacs. Thanks to Colin Marquardt
  <colin.marquardt@usa.alcatel.com> for this.

- Fixed bug with truncating lines in tree-buffer.el.

- The methods buffer can now be automatically updated when the source
  file is saved.

- Help text is available with "ecb-show-help".

- Moving the mouse over a node shows the name in the
  mini-buffer. Currently this only works when follow-mouse is
  activated.

Version 1.0 (2001-03-17):
-------------------------

- Changed name from JCB to ECB and prefix from "jde-jcb-" to "ecb-".

- Works with semantic 1.3.1 and higher.

- Fixed a couple of bugs when creating and deleting files.

- Grouped customization variables.

Contributed by Klaus Berndl <klaus.berndl@sdm.de>:

- A lot of intelligent ECB window-functions (e.g. ecb-delete-window) which
  gives you the feeling as if the edit-window is the only window of the ECB
  frame.

- New layout functionality.

- The history buffer can optionally be sorted and also cleared.

- The package expanded symbol can optionally be placed before the package name.

- Syntax highlighting of the methods buffer.

- Show argument names and return type in the methods buffer.

- History clear function: ecb-clear-history.

- Added pop-up menu to the history buffer.

- Fixed edit buffer sync bug.

Version 0.04 (2000-11-07):
--------------------------

- Keyboard navigation in JCB buffers. Use Return to select and Tab to expand.

- Tree view of packages.

- Class files can be viewed in the packages buffer.

- Better handling of mouse events.

- Automatic update of the packages buffer.

- Added pop-up menus to the packages and classes buffers. They are activated 
  with mouse button 3 (right button).

- Added method sorting. Thanks to Brian Anderson <brian.anderson@luna.com> 
  for this improvement.

Version 0.03 (2000-07-28):
--------------------------

- Fixed naming of variables.

- Fixed license and copyright comments.

- Fixed class file regular expression bug. 
  Thanks to Jim Loverde <loverde@str.com> for finding it.

- Added three new layouts.

- The JCB buffers can now be (almost) synchronized with the edit window.

- When clicking on a class or method using mouse button 2, it will be loaded
  into another window. A new customization variable was added for this.

- Minor changes. Thanks to Jim for his suggestions.

- Removed the "jde-jcb-window-skips-from-methods-buffer" and 
  "jde-jcb-window-skips-from-history-buffer" customization variables.

Version 0.02 (2000-07-15):
--------------------------

- Changed prefix from "jcb-" to "jde-jcb-". This will cause JCB customization 
  variables to be saved in JDE project files.

- Lists and parses non-Java file types. Currently the C and Lisp parsers from 
  semantic-ex.el are used.

- History buffer implemented.

- Layout function implement. Thanks to Jim Loverde <loverde@str.com> for 
  helping out with this.

- Packages matching a regular expression can be excluded from the packages 
  buffer. Thanks to Mark Gibson <mark@markg.co.uk> for this feature.

Version 0.01 (2000-07-08):
--------------------------

- Initial version.
